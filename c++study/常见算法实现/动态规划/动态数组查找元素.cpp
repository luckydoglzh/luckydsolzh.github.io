/*
 * 本程序用于在任意行中查找元素，支持可变数组大小的应用
 * 使用指针来实现
 * 重要提示：
 * 数组的索引值可以从 1 到 100000
 * 检查直到数组的 1000
 * 结束提示
 * 工作示例：
 **问题：
 ***数组数量：2
 ***查询数量：3
 ***数组 1 是 {1, 2, 3, 4, 5}
 ***数组 2 是 {6, 7}
 ****i) 第 2 个元素在第 1 个数组中
 ****ii) 第 1 个元素在第 2 个数组中
 ****iii) 第 5 个元素在第 1 个数组中
 *****输出：
 *****请输入要存储的数组数量：2
 *****请输入与数组相关的问题或查询的数量：3
 *****请输入第 1 行中的元素数量：5
 *****请输入数组 1 的元素 2 3 4 5
 *****请输入第 2 行中的元素数量：2
 *****请输入数组 6 7
 *****请输入您想要查找的元素所在的行号：1
 *****请输入您想要查找的元素位置：2
 *****该元素是 2
 *****请输入您想要查找的元素所在的行号：2
 *****请输入您想要查找的元素位置：1
 *****该元素是 6
 *****请输入您想要查找的元素所在的行号：1
 *****请输入您想要查找的元素位置：5
 *****该元素是 5
 */

#include <iostream>

// 主函数
int main() {
    int64_t r, mr = 0, x, q, i, z;
    std::cout << "请输入要存储的数组数量：";
    std::cin >> x;
    std::cout << "请输入与数组相关的问题或查询的数量：";
    std::cin >> q;

    // 动态创建一个二维数组，因为用户可以更改要存储的每个数组的大小
    int** ar = new int*[x]();
    
    // 这个循环用于输入不同大小的数组
    for (r = 0; r < x; r++) {
        std::cout << "请输入第 " << r + 1 << " 行中的元素数量：";
        std::cin >> mr;
        
        // 创建一维数组
        int* ac = new int[mr]();
        std::cout << "请输入数组的元素：";
        
        // 这个循环用于存储数组中的值
        for (i = 0; i < mr; i++) {
            // 水平输入行的值
            std::cin >> ac[i];
        }
        
        // 将数组的位置更改，以便输入新的数组
        ar[r] = ac;
    }

    // 这个循环用于显示查询结果
    for (z = 0; z < q; z++) {
        int64_t r1 = 0, q1 = 0;
        std::cout << "请输入您想要查找的元素所在的行号：";
        std::cin >> r1;
        r1 = r1 - 1;  // 调整为 0 索引
        std::cout << "请输入您想要查找的元素位置：";
        std::cin >> q1;
        q1 = q1 - 1;  // 调整为 0 索引
        
        // 查找所需数组中所需元素的位置
        std::cout << "该元素是 " << ar[r1][q1] << std::endl;
    }

    // 释放动态分配的内存
    for (r = 0; r < x; r++) {
        delete[] ar[r]; // 释放每个一维数组的内存
    }
    delete[] ar; // 释放二维数组的内存

    return 0;
}
